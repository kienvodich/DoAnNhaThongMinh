#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/a4dfa7b2-4c82-4bc7-ae69-ec774e7ba0a7 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudLight congNam;
  CloudSwitch autoMode;
  CloudSwitch congDong;
  CloudSwitch congTay;
  CloudTemperatureSensor nhietDo;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#include <DHTesp.h>
#define DHTPIN 26
#define DHTTYPE DHT11

#define enA1 13
#define IN1 12
#define IN2	14
#define IN3	19
#define IN4	18
#define enB1 22

#define IN5 32
#define IN6 21
#define enA2 33
#define mb 5
DHTesp dht;
const int cbRain = 34;
const int cbGas = 35;
const int cbAm = 36;
unsigned long timeDelay = millis();
unsigned long timeRead = millis();
bool update=0;
bool ttDong = 0; // Trang thai dang dong cua
bool ttTay = 0;
bool ttNam = 0;
bool autoM = 1;
void setup() {
  
  Serial.begin(9600);
  delay(1500); 

  initProperties();

  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  dht.setup(DHTPIN, DHTesp::DHTTYPE);
  pinMode(enA1,OUTPUT);
  pinMode(enB1,OUTPUT);
  pinMode(enA2,OUTPUT);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  pinMode(IN5, OUTPUT);
  pinMode(IN6, OUTPUT);
  pinMode(mb, OUTPUT);
  pinMode(cbRain, INPUT);
  pinMode(cbGas, INPUT);
  pinMode(cbAm, INPUT_PULLUP);
}
 
void cuaDong_Mo() {
  analogWrite(enA1, 80);
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  delay(1500);
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
}
 
void cuaDong_Dong() {
  analogWrite(enA1, 175);
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  analogWrite(enA1, 75);
  delay(650);
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
}
 
void cuaTay_Mo() { 
  analogWrite(enB1, 90);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  delay(1000);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
}
 
void cuaTay_Dong() {
  analogWrite(enB1, 80);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
  delay(600);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
}
void cuaNam_Mo() { 
  analogWrite(enA2, 90);
  digitalWrite(IN5, HIGH);
  digitalWrite(IN6, LOW);
  delay(1000);
  digitalWrite(IN5, LOW);
  digitalWrite(IN6, LOW);
}
 
void cuaNam_Dong() {
  analogWrite(enA2, 75);
  digitalWrite(IN5, LOW);
  digitalWrite(IN6, HIGH);
  delay(550);
  digitalWrite(IN5, LOW);
  digitalWrite(IN6, LOW);
}
void camBienMua(){
  int value = digitalRead(cbRain);
  Serial.print("Mua hay khong: ");
  Serial.println(value);
  if(autoM == 1){
    if(value == 0) // troi dang mua
    {
      if(ttTay != 0)
      {
        ttTay=0;
        update = 1;
        cuaTay_Dong();
      }
    }
  }
}
void camBienGas(){
  double valueGas = analogRead(cbGas);
  Serial.print("Gia tri gas: ");
  Serial.println(valueGas);
  if(valueGas >= 1000) // vuot qua muc cho phep
  {
    if(ttDong != 1)
    {
      ttDong=1;
      update = 1;
      cuaDong_Mo();
    }
  }
}
void cambienAm(){
  int valueAm = analogRead(cbAm);
  int percent = ( 100 - ( (valueAm/4095.00) * 100 ) );
  Serial.print("Do am: ");
  Serial.print(percent);
  Serial.println("%");
  if(autoM == 1){
    if(percent <= 50)
    {
      // dieu khien may bom
      digitalWrite(mb,HIGH);
    }
    else
    {
      digitalWrite(mb,LOW);
    }
  }
}
void cambienNhiet(){
  if(autoM == 1){
    if(nhietDo >= 32){
      if(ttNam != 1)
      {
        ttNam=1;
        update = 1;
        cuaNam_Mo(); 
      }
    }
  }
}
void loop() {
  ArduinoCloud.update();
  // Your code here 
  if(millis()-timeRead>1000){
    float t = dht.getTemperature();
    nhietDo = t;
    timeRead = millis();
  }
  if(update==1){
    congDong = ttDong;
    congTay = ttTay;
    congNam = ttNam;
    autoMode = autoM;
    update=0;
  }
  camBienMua();
  camBienGas();
  cambienAm();
  cambienNhiet();
}


/*
  Since Temperature is READ_WRITE variable, onTemperatureChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onNhietDoChange()  {
  // Add your code here to act upon Temperature change
}

/*
  Since CongDong is READ_WRITE variable, onCongDongChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onCongDongChange()  {
  // Add your code here to act upon CongDong change
  if(congDong == 1)
  {
    ttDong=1;
    cuaDong_Mo();
  }
  else{
    ttDong=0;
    cuaDong_Dong();
  }
}

/*
  Since CongTay is READ_WRITE variable, onCongTayChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onCongTayChange()  {
  // Add your code here to act upon CongTay change
  if(congTay == 1)
  {
    cuaTay_Mo();
    ttTay=1;
  }
  else{
    cuaTay_Dong();
    ttTay=0;
  }
}

/*
  Since CongNam is READ_WRITE variable, onCongNamChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onCongNamChange()  {
  // Add your code here to act upon CongNam change
  if(congNam == 1)
  {
    cuaNam_Mo();
    ttNam=1;
  }
  else{
    cuaNam_Dong();
    ttNam=0;
  }
}

/*
  Since AutoMode is READ_WRITE variable, onAutoModeChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAutoModeChange()  {
  // Add your code here to act upon AutoMode change
   autoM = autoMode;
}